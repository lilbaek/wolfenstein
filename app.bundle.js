!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){t.exports=i(1)},function(t,e,i){"use strict";i.r(e);var n,s={SLICE_WIDTH:3,WALL_TEXTURE_WIDTH:64,NUM_WALL_TEXTURES:55,HUD_FACE_WIDTH:48,HUD_FACE_HEIGHT:64,HUD_WEAPON_WIDTH:256,NUMAREAS:37,FIRSTAREA:107,AMBUSHTILE:106,AMBUSH:-2,TILEGLOBAL:65536,HALFTILE:32768,TILESHIFT:16,MINDIST:22528,FLOATTILE:65536,TILE2POS:function(t){return(t<<s.TILESHIFT)+s.HALFTILE},POS2TILE:function(t){return t>>s.TILESHIFT},POS2TILEf:function(t){return t/s.FLOATTILE},ASTEP:.0078125,ASTEPRAD:136354e-9,ANG_1RAD:7333.8598,ANG_0:0,ANG_1:128,ANG_6:768,ANG_15:1920,ANG_22_5:2880,ANG_30:3840,ANG_45:5760,ANG_67_5:8640,ANG_90:11520,ANG_112_5:14400,ANG_135:17280,ANG_157_5:20160,ANG_180:23040,ANG_202_5:25920,ANG_225:28800,ANG_247_5:31680,ANG_270:34560,ANG_292_5:37440,ANG_315:40320,ANG_337_5:43200,ANG_360:46080,ANGLES:360,DEATHROTATE:2,FINE2RAD:function(t){return t*Math.PI/s.ANG_180},RAD2FINE:function(t){return t*s.ANG_180/Math.PI},FINE2DEG:function(t){return t/s.ANG_1>>0},FINE2DEGf:function(t){return t/s.ANG_1},DEG2FINE:function(t){return t*s.ANG_1}},r=(s.MINDIST,64),a=98,o=102,h=104;!function(t){t[t.INVALID=-1]="INVALID",t[t.DOOR_VERT=255]="DOOR_VERT",t[t.DOOR_HORIZ=254]="DOOR_HORIZ",t[t.DOOR_E_VERT=253]="DOOR_E_VERT",t[t.DOOR_E_HORIZ=252]="DOOR_E_HORIZ",t[t.DOOR_G_VERT=251]="DOOR_G_VERT",t[t.DOOR_G_HORIZ=250]="DOOR_G_HORIZ",t[t.DOOR_S_VERT=249]="DOOR_S_VERT",t[t.DOOR_S_HORIZ=248]="DOOR_S_HORIZ"}(n||(n={}));var c,u=function(){function t(t,e,i){this.x=t,this.y=e,this.player=i}return t.prototype.tick=function(){var t=this.timer;t&&(t.t+=1,t.t>64&&(this.isOpen=t.opening,this.timer=void 0))},t.prototype.update=function(t){if(t[" "]&&!this.timer){var e=this.player,i=this.player.getPositionInWorld();if(this.x!==i.worldX||this.y!==i.worldY)return;var n=!0;if(this.isOpen){if(i.dx>0&&i.worldX-e.x<=e.radius||i.dx<0&&e.x-i.worldX-1<=e.radius||i.dy>0&&i.worldY-e.y<=e.radius||i.dy<0&&e.y-i.worldY-1<=e.radius)return;n=!1,this.isOpen=!1}this.timer={x:i.worldX,y:i.worldY,t:0,opening:n}}},t.prototype.getTimer=function(){return this.timer},t}(),p=function(){function t(t){if(this._keys=[],this._values=[],t)for(var e=0;e<t.length;e++)this[t[e].key]=t[e].value,this._keys.push(t[e].key),this._values.push(t[e].value)}return t.prototype.add=function(t,e){this[t]=e,this._keys.push(t),this._values.push(e)},t.prototype.remove=function(t){var e=this._keys.indexOf(t,0);this._keys.splice(e,1),this._values.splice(e,1),delete this[t]},t.prototype.get=function(t){return this[t]},t.prototype.keys=function(){return this._keys},t.prototype.values=function(){return this._values},t.prototype.containsKey=function(t){return void 0!==this[t]},t.prototype.toLookup=function(){return this},t.prototype.count=function(){return this._keys.length},t}();!function(t){t[t.WALL_TILE=1]="WALL_TILE",t[t.PUSHWALL_TILE=1048576]="PUSHWALL_TILE",t[t.DOOR_TILE=2]="DOOR_TILE",t[t.SECRET_TILE=4]="SECRET_TILE",t[t.DRESS_TILE=8]="DRESS_TILE",t[t.BLOCK_TILE=16]="BLOCK_TILE",t[t.ACTOR_TILE=32]="ACTOR_TILE",t[t.DEADACTOR_TILE=64]="DEADACTOR_TILE",t[t.POWERUP_TILE=128]="POWERUP_TILE",t[t.AMBUSH_TILE=256]="AMBUSH_TILE",t[t.EXIT_TILE=512]="EXIT_TILE",t[t.SECRETLEVEL_TILE=1024]="SECRETLEVEL_TILE",t[t.ELEVATOR_TILE=2048]="ELEVATOR_TILE"}(c||(c={}));var l=function(){function t(t){this.speed=.065,this.speedA=.05,this.radius=.25,this.map=t}return t.prototype.turn=function(t){var e=this.dx*Math.cos(t)-this.dy*Math.sin(t);this.dy=this.dx*Math.sin(t)+this.dy*Math.cos(t),this.dx=e},t.prototype.getPositionInWorld=function(){var t=~~this.x,e=~~this.y,i=0,n=0;return Math.abs(this.dx)>=Math.abs(this.dy)?t+=i=this.dx>=0?1:-1:e+=n=this.dy>=0?1:-1,{worldX:t,worldY:e,dx:i,dy:n}},t.prototype.move=function(t){var e=this.x+this.dx*t,i=this.y+this.dy*t;this.canMoveTo(e,this.y)&&(this.x=e),this.canMoveTo(this.x,i)&&(this.y=i)},t.prototype.canMoveTo=function(t,e){var i=this.radius,n=t%1,s=~~t,r=e%1,a=~~e;if(this.isSolidTile(s,a))return!1;if(n<i){if(this.isSolidTile(s-1,a))return!1;if(r<i&&this.isSolidTile(s-1,a-1))return!1;if(r>1-i&&this.isSolidTile(s-1,a+1))return!1}if(n>1-i){if(this.isSolidTile(s+1,a))return!1;if(r<i&&this.isSolidTile(s+1,a-1))return!1;if(r>1-i&&this.isSolidTile(s+1,a+1))return!1}return!(r<i&&this.isSolidTile(s,a-1))&&!(r>1-i&&this.isSolidTile(s,a+1))},t.prototype.isSolidTile=function(t,e){if(this.map.doors.containsKey(t.toFixed()+e.toFixed()))return!this.map.doors.get(t.toFixed()+e.toFixed()).isOpen;var i=this.map.tileMap[t][e];return i===c.WALL_TILE||i===c.BLOCK_TILE||i===c.PUSHWALL_TILE},t.prototype.handleInput=function(t){t.ArrowRight&&this.turn(this.speedA),t.ArrowLeft&&this.turn(-this.speedA),t.ArrowUp&&this.move(this.speed),t.ArrowDown&&this.move(-this.speed)},t}(),f=function(){function t(t,e,i){this.doors=new p,this.plane0=t,this.plane1=e,this.wallTextureOffset=i}return t.prototype.setup=function(){this.player=new l(this),this.setupTileMap();for(var t=0;t<64;t++)for(var e=0;e<64;e++)this.setupWorld(e,t),this.EntitiesAndProps(e,t)},t.prototype.EntitiesAndProps=function(t,e){var i=this.map1(t,e);switch(i){case 19:case 20:case 21:case 22:this.spawnPlayer(t,e,i);break;case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:this.spawnStatic(t,e,i);break;case 98:break;case 124:this.spawnDeadGuard(t,e);break;default:i>=108&&this.spawnEnemiesAndGuards(t,e,i)}},t.prototype.spawnEnemiesAndGuards=function(t,e,i){},t.prototype.spawnDeadGuard=function(t,e){},t.prototype.spawnStatic=function(t,e,i){},t.prototype.spawnPlayer=function(t,e,i){this.player.x=t+.5,this.player.y=e+.5,19===i?(this.player.dx=0,this.player.dy=-1):20===i?(this.player.dx=1,this.player.dy=0):21===i?(this.player.dx=0,this.player.dy=1):22===i&&(this.player.dx=-1,this.player.dy=0)},t.prototype.setupWorld=function(t,e){var i=this.map0(t,e);i<=63?this.tileMap[t][e]|=c.WALL_TILE:90<=i&&i<=101&&this.spawnDoor(t,e,i)},t.prototype.spawnDoor=function(t,e,i){if(this.doors.count()>=r)throw new Error("Too many Doors on level!");this.tileMap[t][e]|=c.DOOR_TILE;var s=new u(t,e,this.player);switch(this.doors.add(t.toFixed()+e.toFixed(),s),i){case 90:s.Type=n.DOOR_VERT,s.Vertical=!0,s.TextureIndex=a+1;break;case 91:s.Type=n.DOOR_HORIZ,s.Vertical=!1,s.TextureIndex=a;break;case 92:s.Type=n.DOOR_G_VERT,s.Vertical=!0,s.TextureIndex=h;break;case 93:s.Type=n.DOOR_G_HORIZ,s.Vertical=!1,s.TextureIndex=h;break;case 94:s.Type=n.DOOR_S_VERT,s.Vertical=!0,s.TextureIndex=h+1;break;case 95:s.Type=n.DOOR_G_HORIZ,s.Vertical=!1,s.TextureIndex=h+1;break;case 100:s.Type=n.DOOR_G_VERT,s.Vertical=!0,s.TextureIndex=o+1;break;case 101:s.Type=n.DOOR_E_HORIZ,s.Vertical=!1,s.TextureIndex=o;break;default:throw new Error("Unknown door type: "+i)}},t.prototype.map0=function(t,e){return this.plane0.getUint16(2*(t+64*e),!0)},t.prototype.map1=function(t,e){return this.plane1.getUint16(2*(t+64*e),!0)},t.prototype.setupTileMap=function(){this.tileMap=[];for(var t=0;t<64;t++){var e=Array(64);e.fill(0),this.tileMap.push(e)}},t.prototype.handleInput=function(t){var e=this;this.doors.keys().forEach((function(i){e.doors.get(i).update(t)}))},t.prototype.tick=function(){var t=this;this.doors.keys().forEach((function(e){t.doors.get(e).tick()}))},t}(),d=function(){function t(){}return t.prototype.loadResources=function(){var t=this,e=this.getBinaryFile("GAMEMAPS.WL6"),i=this.getBinaryFile("MAPHEAD.WL6"),n=this.getBinaryFile("VSWAP.WL6");return e.then((function(e){return t.gameMaps=e})),i.then((function(e){return t.mapHead=e})),n.then((function(e){t.wsMap=new DataView(e),t.wallTextureOffset=t.wsMap.getUint32(6,!0)})),Promise.all([e,i,n])},t.prototype.getBinaryFile=function(t){return new Promise((function(e){var i=new XMLHttpRequest;i.onload=function(){return e(i.response)},i.responseType="arraybuffer",i.open("GET",t),i.send()}))},t.prototype.loadLevel=function(t){var e=new DataView(this.mapHead).getUint32(2+4*t,!0),i=new DataView(this.gameMaps,e,42),n=new DataView(this.gameMaps,i.getUint32(0,!0),i.getUint16(12,!0)),s=this.rlewDecode(this.carmackDecode(n)),r=new DataView(this.gameMaps,i.getUint32(4,!0),i.getUint16(14,!0)),a=this.rlewDecode(this.carmackDecode(r)),o=new f(s,a,this.wallTextureOffset);return o.setup(),o},t.prototype.rlewDecode=function(t){for(var e=new DataView(this.mapHead).getUint16(0,!0),i=t.getUint16(0,!0),n=new ArrayBuffer(i),s=new DataView(n),r=2,a=0;r<t.byteLength;){var o=t.getUint16(r,!0);if(r+=2,o===e){var h=t.getUint16(r,!0),c=t.getUint16(r+2,!0);r+=4;for(var u=0;u<h;u++)s.setUint16(a,c,!0),a+=2}else s.setUint16(a,o,!0),a+=2}return s},t.prototype.carmackDecode=function(t){for(var e=t.getUint16(0,!0),i=new ArrayBuffer(e),n=new DataView(i),s=2,r=0;s<t.byteLength;){var a=t.getUint8(s+1);if(167===a||168===a){var o=t.getUint8(s);if(0===o)n.setUint8(r,t.getUint8(s+2)),n.setUint8(r+1,a),s+=3,r+=2;else if(167===a){for(var h=2*t.getUint8(s+2),c=0;c<o;c++)n.setUint16(r,n.getUint16(r-h,!0),!0),r+=2;s+=3}else{for(h=2*t.getUint16(s+2,!0),c=0;c<o;c++)n.setUint16(r,n.getUint16(h+2*c,!0),!0),r+=2;s+=4}}else n.setUint16(r,t.getUint16(s,!0),!0),s+=2,r+=2}return n},t}(),y=new Uint32Array([4278190080,4289200128,4278233088,4289243136,4278190248,4289200296,4278211752,4289243304,4283716692,4294726740,4283759700,4294769748,4283716860,4294726908,4283759868,4294769916,4293717228,4292664540,4291875024,4290822336,4290032820,4289243304,4288190616,4287401100,4286348412,4285558896,4284769380,4283716692,4282927176,4281874488,4281084972,4280295456,4278190332,4278190316,4278190304,4278190292,4278190280,4278190268,4278190256,4278190244,4278190232,4278190216,4278190204,4278190192,4278190180,4278190168,4278190156,4278190144,4292401404,4290296060,4288453884,4286348540,4284243196,4282401020,4280295676,4278190332,4284262652,4282423548,4280322300,4278221052,4278217956,4278214860,4278211764,4278209692,4292410620,4290313468,4288478460,4286381308,4284283132,4282447100,4280349948,4278252796,4278245604,4278240460,4278234292,4278230172,4278224004,4278217840,4278211672,4278206528,4284284112,4282449092,4280351924,4278254752,4278248592,4278242432,4278236276,4278230112,4292410584,4290313404,4288478364,4286381184,4284284e3,4282448960,4280351776,4278254592,4278254592,4278250496,4278247424,4278244352,4278241284,4278238212,4278235140,4278232068,4278228996,4278224900,4278221828,4278218756,4278215684,4278212612,4278209540,4278206468,4294769880,4294769848,4294769820,4294507644,4294769756,4294769728,4294769696,4294769664,4293190656,4291611648,4290032640,4288453632,4286874624,4285558784,4283979776,4282400768,4294753372,4294750272,4294748192,4294745088,4293168128,4291591168,4290014208,4288437248,4294760664,4294753464,4294745244,4294738044,4294729820,4294721600,4294714400,4294706176,4294705152,4293656576,4292870144,4292083712,4291297280,4290510848,4289724416,4288937984,4288151552,4287102976,4286316544,4285530112,4284743680,4283957248,4283170816,4282384384,4280821800,4281655548,4280603900,4279815420,4278763772,4278236412,4294713524,4294705320,4293132440,4291559552,4289986676,4288413792,4286840912,4285530180,4283957300,4282384424,4294760700,4294752508,4294745340,4294737148,4294728956,4294721788,4294713596,4294705404,4293132512,4291559624,4289986740,4288413852,4286840964,4285530220,4283957336,4282384448,4292667644,4291879164,4291090684,4290565372,4289776892,4288988412,4288462076,4287674620,4286623996,4285572348,4284521724,4284257520,4283993320,4283730140,4283465936,4283202760,4282939580,4282675380,4282411176,4282148e3,4281884828,4281621648,4281358472,4281094272,4280831092,4280567916,4280303708,4280040532,4279777352,4279775296,4279512120,4278984744,4284743776,4284769280,4284506112,4280025088,4281073664,4279247920,4282908744,4283433040,4281597952,4280032284,4283190348,4284243036,4282400832,4281348144,4281611316,4294243544,4293454008,4292664476,4291348596,4290822216,4290032672,4289769504,4288979968,4288190464,4287400960,4286874624,4286348288,4286085120,4285821952,4285558784,4285295616,4287103128]),_=function(){function t(t,e,i,n){this.fov=1,this.gameAssets=t,this.map=e,this.gameWidth=i,this.gameHeight=n,this.wallHeight=this.gameWidth/(2*this.fov),this.player=this.map.player}return t.prototype.draw=function(t){for(var e=0;e<this.gameWidth;e++){var i=this.fov*((e<<1)-this.gameWidth)/this.gameWidth,n=this.player.dx-i*this.player.dy,s=this.player.dy+i*this.player.dx,r=(this.player.x,this.player.y,n>=0?1:-1),a=s>=0?1:-1;n*=r,s*=a;var o=~~this.player.x,h=~~this.player.y,c=r>0?1-this.player.x%1:this.player.x%1;0===c&&(c=1,o+=r);var u=a>0?1-this.player.y%1:this.player.y%1;0===u&&(u=1,h+=a);for(var p=0,l=void 0,f=void 0,d=void 0;;){if((l=this.map.map0(o,h))<=63){var _=0;if(98===this.map.map1(o,h)){!0;var T=void 0;if(void 0!==(T=void 0))if(_=T.t/64,0!==T.dx){if(!(n*u>=s*_)){!1,p+=m=u/s,u=1,h+=a,c-=m*n;continue}p+=m=_/n,u-=m*s,c-=_}else{if(!(s*c>=n*_)){!1,p+=m=c/n,c=1,o+=r,u-=m*s;continue}p+=m=_/s,c-=m*n,u-=_}}c===1-_?(d=2*l-1,f=r*a>0?1-u:u):(d=2*l-2,f=r*a<0?1-c:c);break}if(l<=101){var E=this.map.doors.get(o.toFixed()+h.toFixed()),g=0;if((T=E.getTimer())&&(g=T.opening?T.t/64:1-T.t/64),E.isOpen&&(g=1),l%2==0){if(c>=.5&&(c-.5)*s<u*n)if(p+=m=(c-.5)/n,u-=m*s,c=.5,f=a>0?1-u:u,(f-=g)>=0){switch(l){case 90:d=99;break;case 92:case 94:d=105;break;case 100:d=103}break}if(c*s>=u*n){p+=m=u/s,c-=m*n,u=1,h+=a,d=100,f=r>0?1-c:c;break}p+=m=c/n,u-=m*s,c=1,o+=r}else{if(u>=.5&&(u-.5)*n<c*s)if(p+=m=(u-.5)/s,c-=m*n,u=.5,f=r>0?1-c:c,(f-=g)>=0){switch(l){case 91:d=98;break;case 93:case 95:d=104;break;case 101:d=102}break}if(u*n>=c*s){p+=m=c/n,u-=m*s,c=1,o+=r,d=101,f=a>0?1-u:u;break}p+=m=u/s,c-=m*n,u=1,h+=a}}var m;if(c*s<=u*n)p+=m=c/n,c=1,o+=r,u-=m*s;else p+=m=u/s,u=1,h+=a,c-=m*n}r>0?o+1-c:o+c,a>0?h+1-u:h+u;for(var v=this.wallHeight/(2*p),O=~~(this.gameHeight/2-v),w=(this.gameHeight/2-v)%1,A=~~(v/32),I=v/32%1,L=this.map.wallTextureOffset+4096*d+64*~~(64*f),D=0;D<=O;D++)t.setUint32(this.gameWidth*D+e<<2,y[29],!0),t.setUint32(this.gameWidth*(this.gameHeight-1-D)+e<<2,y[25],!0);for(D=L;D<L+64;D++){var R;if(R=y[this.gameAssets.wsMap.getUint8(D)],(w+=I)>=1){for(var x=Math.max(0,O);x<Math.min(this.gameHeight,O+A+1);x++)t.setUint32(this.gameWidth*x+e<<2,R,!0);O+=A+1,w-=1}else{for(x=Math.max(0,O);x<Math.min(this.gameHeight,O+A);x++)t.setUint32(this.gameWidth*x+e<<2,R,!0);O+=A}}}},t}(),T=function(){function t(t,e){this.gameWidth=640,this.gameHeight=400,this.canvas=t,this.gameAssets=e,this.canvas.width=this.gameWidth,this.canvas.height=this.gameHeight,this.context=this.canvas.getContext("2d",{alpha:!1}),this.imageData=new ImageData(this.gameWidth,this.gameHeight),this.pixels=new DataView(this.imageData.data.buffer)}return t.prototype.initialize=function(){this.map=this.gameAssets.loadLevel(0),this.player=this.map.player,this.worldRenderer=new _(this.gameAssets,this.map,this.gameWidth,this.gameHeight)},t.prototype.update=function(t){this.player.handleInput(t),this.map.handleInput(t),this.map.tick()},t.prototype.draw=function(){this.worldRenderer.draw(this.pixels),this.context.putImageData(this.imageData,0,0),this.context.drawImage(this.canvas,0,0)},t}(),E=function(t,e,i,n){return new(i||(i=Promise))((function(s,r){function a(t){try{h(n.next(t))}catch(t){r(t)}}function o(t){try{h(n.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,o)}h((n=n.apply(t,e||[])).next())}))},g=function(t,e){var i,n,s,r,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(s=2&r[0]?n.return:r[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,r[1])).done)return s;switch(n=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(s=a.trys,(s=s.length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){a.label=r[1];break}if(6===r[0]&&a.label<s[1]){a.label=s[1],s=r;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(r);break}s[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}},m=function(){function t(){this.gameAssets=new d,this.keys={}}return t.prototype.run=function(){return E(this,void 0,void 0,(function(){var t=this;return g(this,(function(e){switch(e.label){case 0:return[4,this.gameAssets.loadResources()];case 1:return e.sent(),this.canvas=document.createElement("canvas"),this.game=new T(this.canvas,this.gameAssets),document.body.appendChild(this.canvas),this.game.initialize(),this.tick=this.tick.bind(this),this.tick(),document.onkeydown=function(e){e.preventDefault(),t.keys[e.key]=!0},document.onkeyup=function(e){e.preventDefault(),t.keys[e.key]=!1},[2]}}))}))},t.prototype.tick=function(){this.game.update(this.keys),this.game.draw(),requestAnimationFrame(this.tick)},t}();window.onload=function(){(new m).run().catch((function(t){console.error(t)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,