!function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){e.exports=i(1)},function(e,t,i){"use strict";i.r(t);var n,r={SLICE_WIDTH:3,WALL_TEXTURE_WIDTH:64,NUM_WALL_TEXTURES:55,HUD_FACE_WIDTH:48,HUD_FACE_HEIGHT:64,HUD_WEAPON_WIDTH:256,NUMAREAS:37,FIRSTAREA:107,AMBUSHTILE:106,AMBUSH:-2,TILEGLOBAL:65536,HALFTILE:32768,TILESHIFT:16,MINDIST:22528,FLOATTILE:65536,TILE2POS:function(e){return(e<<r.TILESHIFT)+r.HALFTILE},POS2TILE:function(e){return e>>r.TILESHIFT},POS2TILEf:function(e){return e/r.FLOATTILE},ASTEP:.0078125,ASTEPRAD:136354e-9,ANG_1RAD:7333.8598,ANG_0:0,ANG_1:128,ANG_6:768,ANG_15:1920,ANG_22_5:2880,ANG_30:3840,ANG_45:5760,ANG_67_5:8640,ANG_90:11520,ANG_112_5:14400,ANG_135:17280,ANG_157_5:20160,ANG_180:23040,ANG_202_5:25920,ANG_225:28800,ANG_247_5:31680,ANG_270:34560,ANG_292_5:37440,ANG_315:40320,ANG_337_5:43200,ANG_360:46080,ANGLES:360,DEATHROTATE:2,FINE2RAD:function(e){return e*Math.PI/r.ANG_180},RAD2FINE:function(e){return e*r.ANG_180/Math.PI},FINE2DEG:function(e){return e/r.ANG_1>>0},FINE2DEGf:function(e){return e/r.ANG_1},DEG2FINE:function(e){return e*r.ANG_1}},s=(r.MINDIST,64),a=98,o=102,h=104;!function(e){e[e.INVALID=-1]="INVALID",e[e.DOOR_VERT=255]="DOOR_VERT",e[e.DOOR_HORIZ=254]="DOOR_HORIZ",e[e.DOOR_E_VERT=253]="DOOR_E_VERT",e[e.DOOR_E_HORIZ=252]="DOOR_E_HORIZ",e[e.DOOR_G_VERT=251]="DOOR_G_VERT",e[e.DOOR_G_HORIZ=250]="DOOR_G_HORIZ",e[e.DOOR_S_VERT=249]="DOOR_S_VERT",e[e.DOOR_S_HORIZ=248]="DOOR_S_HORIZ"}(n||(n={}));var c,u=function(e,t){this.x=e,this.y=t,this.isOpen=!0},p=function(){function e(e){if(this._keys=[],this._values=[],e)for(var t=0;t<e.length;t++)this[e[t].key]=e[t].value,this._keys.push(e[t].key),this._values.push(e[t].value)}return e.prototype.add=function(e,t){this[e]=t,this._keys.push(e),this._values.push(t)},e.prototype.remove=function(e){var t=this._keys.indexOf(e,0);this._keys.splice(t,1),this._values.splice(t,1),delete this[e]},e.prototype.get=function(e){return this[e]},e.prototype.keys=function(){return this._keys},e.prototype.values=function(){return this._values},e.prototype.containsKey=function(e){return void 0!==this[e]},e.prototype.toLookup=function(){return this},e.prototype.count=function(){return this._keys.length},e}();!function(e){e[e.WALL_TILE=1]="WALL_TILE",e[e.PUSHWALL_TILE=1048576]="PUSHWALL_TILE",e[e.DOOR_TILE=2]="DOOR_TILE",e[e.SECRET_TILE=4]="SECRET_TILE",e[e.DRESS_TILE=8]="DRESS_TILE",e[e.BLOCK_TILE=16]="BLOCK_TILE",e[e.ACTOR_TILE=32]="ACTOR_TILE",e[e.DEADACTOR_TILE=64]="DEADACTOR_TILE",e[e.POWERUP_TILE=128]="POWERUP_TILE",e[e.AMBUSH_TILE=256]="AMBUSH_TILE",e[e.EXIT_TILE=512]="EXIT_TILE",e[e.SECRETLEVEL_TILE=1024]="SECRETLEVEL_TILE",e[e.ELEVATOR_TILE=2048]="ELEVATOR_TILE"}(c||(c={}));var l=function(){function e(e){this.speed=.065,this.speedA=.05,this.radius=.25,this.map=e}return e.prototype.turn=function(e){var t=this.dx*Math.cos(e)-this.dy*Math.sin(e);this.dy=this.dx*Math.sin(e)+this.dy*Math.cos(e),this.dx=t},e.prototype.move=function(e){var t=this.x+this.dx*e,i=this.y+this.dy*e;this.canMoveTo(t,this.y)&&(this.x=t),this.canMoveTo(this.x,i)&&(this.y=i)},e.prototype.canMoveTo=function(e,t){var i=this.radius,n=e%1,r=~~e,s=t%1,a=~~t;if(this.isSolidTile(r,a))return!1;if(n<i){if(this.isSolidTile(r-1,a))return!1;if(s<i&&this.isSolidTile(r-1,a-1))return!1;if(s>1-i&&this.isSolidTile(r-1,a+1))return!1}if(n>1-i){if(this.isSolidTile(r+1,a))return!1;if(s<i&&this.isSolidTile(r+1,a-1))return!1;if(s>1-i&&this.isSolidTile(r+1,a+1))return!1}return!(s<i&&this.isSolidTile(r,a-1))&&!(s>1-i&&this.isSolidTile(r,a+1))},e.prototype.isSolidTile=function(e,t){if(this.map.doors.containsKey(e.toFixed()+t.toFixed()))return!this.map.doors.get(e.toFixed()+t.toFixed()).isOpen;var i=this.map.tileMap[e][t];return i===c.WALL_TILE||i===c.BLOCK_TILE||i===c.PUSHWALL_TILE},e}(),f=function(){function e(e,t,i){this.doors=new p,this.plane0=e,this.plane1=t,this.wallTextureOffset=i}return e.prototype.setup=function(){this.player=new l(this),this.setupTileMap();for(var e=0;e<64;e++)for(var t=0;t<64;t++)this.setupWorld(t,e),this.EntitiesAndProps(t,e)},e.prototype.EntitiesAndProps=function(e,t){var i=this.map1(e,t);switch(i){case 19:case 20:case 21:case 22:this.spawnPlayer(e,t,i);break;case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:this.spawnStatic(e,t,i);break;case 98:break;case 124:this.spawnDeadGuard(e,t);break;default:i>=108&&this.spawnEnemiesAndGuards(e,t,i)}},e.prototype.spawnEnemiesAndGuards=function(e,t,i){},e.prototype.spawnDeadGuard=function(e,t){},e.prototype.spawnStatic=function(e,t,i){},e.prototype.spawnPlayer=function(e,t,i){this.player.x=e+.5,this.player.y=t+.5,19===i?(this.player.dx=0,this.player.dy=-1):20===i?(this.player.dx=1,this.player.dy=0):21===i?(this.player.dx=0,this.player.dy=1):22===i&&(this.player.dx=-1,this.player.dy=0)},e.prototype.setupWorld=function(e,t){var i=this.map0(e,t);i<=63?this.tileMap[e][t]|=c.WALL_TILE:90<=i&&i<=101&&this.spawnDoor(e,t,i)},e.prototype.spawnDoor=function(e,t,i){if(this.doors.count()>=s)throw new Error("Too many Doors on level!");this.tileMap[e][t]|=c.DOOR_TILE;var r=new u(e,t);switch(this.doors.add(e.toFixed()+t.toFixed(),r),i){case 90:r.Type=n.DOOR_VERT,r.Vertical=!0,r.TextureIndex=a+1;break;case 91:r.Type=n.DOOR_HORIZ,r.Vertical=!1,r.TextureIndex=a;break;case 92:r.Type=n.DOOR_G_VERT,r.Vertical=!0,r.TextureIndex=h;break;case 93:r.Type=n.DOOR_G_HORIZ,r.Vertical=!1,r.TextureIndex=h;break;case 94:r.Type=n.DOOR_S_VERT,r.Vertical=!0,r.TextureIndex=h+1;break;case 95:r.Type=n.DOOR_G_HORIZ,r.Vertical=!1,r.TextureIndex=h+1;break;case 100:r.Type=n.DOOR_G_VERT,r.Vertical=!0,r.TextureIndex=o+1;break;case 101:r.Type=n.DOOR_E_HORIZ,r.Vertical=!1,r.TextureIndex=o;break;default:throw new Error("Unknown door type: "+i)}},e.prototype.map0=function(e,t){return this.plane0.getUint16(2*(e+64*t),!0)},e.prototype.map1=function(e,t){return this.plane1.getUint16(2*(e+64*t),!0)},e.prototype.setupTileMap=function(){this.tileMap=[];for(var e=0;e<64;e++){var t=Array(64);t.fill(0),this.tileMap.push(t)}},e}(),d=function(){function e(){}return e.prototype.loadResources=function(){var e=this,t=this.getBinaryFile("GAMEMAPS.WL6"),i=this.getBinaryFile("MAPHEAD.WL6"),n=this.getBinaryFile("VSWAP.WL6");return t.then((function(t){return e.gameMaps=t})),i.then((function(t){return e.mapHead=t})),n.then((function(t){e.wsMap=new DataView(t),e.wallTextureOffset=e.wsMap.getUint32(6,!0)})),Promise.all([t,i,n])},e.prototype.getBinaryFile=function(e){return new Promise((function(t){var i=new XMLHttpRequest;i.onload=function(){return t(i.response)},i.responseType="arraybuffer",i.open("GET",e),i.send()}))},e.prototype.loadLevel=function(e){var t=new DataView(this.mapHead).getUint32(2+4*e,!0),i=new DataView(this.gameMaps,t,42),n=new DataView(this.gameMaps,i.getUint32(0,!0),i.getUint16(12,!0)),r=this.rlewDecode(this.carmackDecode(n)),s=new DataView(this.gameMaps,i.getUint32(4,!0),i.getUint16(14,!0)),a=this.rlewDecode(this.carmackDecode(s)),o=new f(r,a,this.wallTextureOffset);return o.setup(),o},e.prototype.rlewDecode=function(e){for(var t=new DataView(this.mapHead).getUint16(0,!0),i=e.getUint16(0,!0),n=new ArrayBuffer(i),r=new DataView(n),s=2,a=0;s<e.byteLength;){var o=e.getUint16(s,!0);if(s+=2,o===t){var h=e.getUint16(s,!0),c=e.getUint16(s+2,!0);s+=4;for(var u=0;u<h;u++)r.setUint16(a,c,!0),a+=2}else r.setUint16(a,o,!0),a+=2}return r},e.prototype.carmackDecode=function(e){for(var t=e.getUint16(0,!0),i=new ArrayBuffer(t),n=new DataView(i),r=2,s=0;r<e.byteLength;){var a=e.getUint8(r+1);if(167===a||168===a){var o=e.getUint8(r);if(0===o)n.setUint8(s,e.getUint8(r+2)),n.setUint8(s+1,a),r+=3,s+=2;else if(167===a){for(var h=2*e.getUint8(r+2),c=0;c<o;c++)n.setUint16(s,n.getUint16(s-h,!0),!0),s+=2;r+=3}else{for(h=2*e.getUint16(r+2,!0),c=0;c<o;c++)n.setUint16(s,n.getUint16(h+2*c,!0),!0),s+=2;r+=4}}else n.setUint16(s,e.getUint16(r,!0),!0),r+=2,s+=2}return n},e}(),y=new Uint32Array([4278190080,4289200128,4278233088,4289243136,4278190248,4289200296,4278211752,4289243304,4283716692,4294726740,4283759700,4294769748,4283716860,4294726908,4283759868,4294769916,4293717228,4292664540,4291875024,4290822336,4290032820,4289243304,4288190616,4287401100,4286348412,4285558896,4284769380,4283716692,4282927176,4281874488,4281084972,4280295456,4278190332,4278190316,4278190304,4278190292,4278190280,4278190268,4278190256,4278190244,4278190232,4278190216,4278190204,4278190192,4278190180,4278190168,4278190156,4278190144,4292401404,4290296060,4288453884,4286348540,4284243196,4282401020,4280295676,4278190332,4284262652,4282423548,4280322300,4278221052,4278217956,4278214860,4278211764,4278209692,4292410620,4290313468,4288478460,4286381308,4284283132,4282447100,4280349948,4278252796,4278245604,4278240460,4278234292,4278230172,4278224004,4278217840,4278211672,4278206528,4284284112,4282449092,4280351924,4278254752,4278248592,4278242432,4278236276,4278230112,4292410584,4290313404,4288478364,4286381184,4284284e3,4282448960,4280351776,4278254592,4278254592,4278250496,4278247424,4278244352,4278241284,4278238212,4278235140,4278232068,4278228996,4278224900,4278221828,4278218756,4278215684,4278212612,4278209540,4278206468,4294769880,4294769848,4294769820,4294507644,4294769756,4294769728,4294769696,4294769664,4293190656,4291611648,4290032640,4288453632,4286874624,4285558784,4283979776,4282400768,4294753372,4294750272,4294748192,4294745088,4293168128,4291591168,4290014208,4288437248,4294760664,4294753464,4294745244,4294738044,4294729820,4294721600,4294714400,4294706176,4294705152,4293656576,4292870144,4292083712,4291297280,4290510848,4289724416,4288937984,4288151552,4287102976,4286316544,4285530112,4284743680,4283957248,4283170816,4282384384,4280821800,4281655548,4280603900,4279815420,4278763772,4278236412,4294713524,4294705320,4293132440,4291559552,4289986676,4288413792,4286840912,4285530180,4283957300,4282384424,4294760700,4294752508,4294745340,4294737148,4294728956,4294721788,4294713596,4294705404,4293132512,4291559624,4289986740,4288413852,4286840964,4285530220,4283957336,4282384448,4292667644,4291879164,4291090684,4290565372,4289776892,4288988412,4288462076,4287674620,4286623996,4285572348,4284521724,4284257520,4283993320,4283730140,4283465936,4283202760,4282939580,4282675380,4282411176,4282148e3,4281884828,4281621648,4281358472,4281094272,4280831092,4280567916,4280303708,4280040532,4279777352,4279775296,4279512120,4278984744,4284743776,4284769280,4284506112,4280025088,4281073664,4279247920,4282908744,4283433040,4281597952,4280032284,4283190348,4284243036,4282400832,4281348144,4281611316,4294243544,4293454008,4292664476,4291348596,4290822216,4290032672,4289769504,4288979968,4288190464,4287400960,4286874624,4286348288,4286085120,4285821952,4285558784,4285295616,4287103128]),_=function(){function e(e,t,i){this.fov=1,this.gameAssets=e,this.gameWidth=t,this.gameHeight=i,this.map=e.loadLevel(0),this.player=this.map.player,this.wallHeight=this.gameWidth/(2*this.fov)}return e.prototype.update=function(e){e.ArrowRight&&this.player.turn(this.player.speedA),e.ArrowLeft&&this.player.turn(-this.player.speedA),e.ArrowUp&&this.player.move(this.player.speed),e.ArrowDown&&this.player.move(-this.player.speed)},e.prototype.draw=function(e){for(var t=0;t<this.gameWidth;t++){var i=this.fov*((t<<1)-this.gameWidth)/this.gameWidth,n=this.player.dx-i*this.player.dy,r=this.player.dy+i*this.player.dx,s=(this.player.x,this.player.y,n>=0?1:-1),a=r>=0?1:-1;n*=s,r*=a;var o=~~this.player.x,h=~~this.player.y,c=s>0?1-this.player.x%1:this.player.x%1;0===c&&(c=1,o+=s);var u=a>0?1-this.player.y%1:this.player.y%1;0===u&&(u=1,h+=a);for(var p=0,l=void 0,f=void 0,d=void 0;;){if((l=this.map.map0(o,h))<=63){var _=0;if(98===this.map.map1(o,h)){!0;void 0}c===1-_?(d=2*l-1,f=s*a>0?1-u:u):(d=2*l-2,f=s*a<0?1-c:c);break}if(l<=101){var T=0;if(this.map.doors.get(o.toFixed()+h.toFixed()).isOpen&&(T=1),l%2==0){if(c>=.5&&(c-.5)*r<u*n)if(p+=E=(c-.5)/n,u-=E*r,c=.5,f=a>0?1-u:u,(f-=T)>=0){switch(l){case 90:d=99;break;case 92:case 94:d=105;break;case 100:d=103}break}if(c*r>=u*n){p+=E=u/r,c-=E*n,u=1,h+=a,d=100,f=s>0?1-c:c;break}p+=E=c/n,u-=E*r,c=1,o+=s}else{if(u>=.5&&(u-.5)*n<c*r)if(p+=E=(u-.5)/r,c-=E*n,u=.5,f=s>0?1-c:c,(f-=T)>=0){switch(l){case 91:d=98;break;case 93:case 95:d=104;break;case 101:d=102}break}if(u*n>=c*r){p+=E=c/n,u-=E*r,c=1,o+=s,d=101,f=a>0?1-u:u;break}p+=E=u/r,c-=E*n,u=1,h+=a}}var E;if(c*r<=u*n)p+=E=c/n,c=1,o+=s,u-=E*r;else p+=E=u/r,u=1,h+=a,c-=E*n}s>0?o+1-c:o+c,a>0?h+1-u:h+u;for(var O=this.wallHeight/(2*p),A=~~(this.gameHeight/2-O),g=(this.gameHeight/2-O)%1,v=~~(O/32),I=O/32%1,w=this.map.wallTextureOffset+4096*d+64*~~(64*f),m=0;m<=A;m++)e.setUint32(this.gameWidth*m+t<<2,y[29],!0),e.setUint32(this.gameWidth*(this.gameHeight-1-m)+t<<2,y[25],!0);for(m=w;m<w+64;m++){var L;if(L=y[this.gameAssets.wsMap.getUint8(m)],(g+=I)>=1){for(var R=Math.max(0,A);R<Math.min(this.gameHeight,A+v+1);R++)e.setUint32(this.gameWidth*R+t<<2,L,!0);A+=v+1,g-=1}else{for(R=Math.max(0,A);R<Math.min(this.gameHeight,A+v);R++)e.setUint32(this.gameWidth*R+t<<2,L,!0);A+=v}}}},e}(),T=function(){function e(e,t){this.gameWidth=640,this.gameHeight=400,this.canvas=e,this.gameAssets=t,this.canvas.width=this.gameWidth,this.canvas.height=this.gameHeight,this.context=this.canvas.getContext("2d",{alpha:!1}),this.imageData=new ImageData(this.gameWidth,this.gameHeight),this.pixels=new DataView(this.imageData.data.buffer),this.worldRenderer=new _(t,this.gameWidth,this.gameHeight)}return e.prototype.update=function(e){this.worldRenderer.update(e)},e.prototype.draw=function(){this.worldRenderer.draw(this.pixels),this.context.putImageData(this.imageData,0,0),this.context.drawImage(this.canvas,0,0)},e}(),E=function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function a(e){try{h(n.next(e))}catch(e){s(e)}}function o(e){try{h(n.throw(e))}catch(e){s(e)}}function h(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,o)}h((n=n.apply(e,t||[])).next())}))},O=function(e,t){var i,n,r,s,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(r=2&s[0]?n.return:s[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,s[1])).done)return r;switch(n=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,n=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],n=0}finally{i=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},A=function(){function e(){this.gameAssets=new d,this.keys={}}return e.prototype.run=function(){return E(this,void 0,void 0,(function(){var e=this;return O(this,(function(t){switch(t.label){case 0:return[4,this.gameAssets.loadResources()];case 1:return t.sent(),this.canvas=document.createElement("canvas"),this.renderer=new T(this.canvas,this.gameAssets),document.body.appendChild(this.canvas),this.tick=this.tick.bind(this),this.tick(),document.onkeydown=function(t){t.preventDefault(),e.keys[t.key]=!0},document.onkeyup=function(t){t.preventDefault(),e.keys[t.key]=!1},[2]}}))}))},e.prototype.tick=function(){this.renderer.update(this.keys),this.renderer.draw(),requestAnimationFrame(this.tick)},e}();window.onload=function(){(new A).run().catch((function(e){console.error(e)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,